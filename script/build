#!/bin/bash
###############################################################################
# Copyright (C) Intel Corporation
#
# SPDX-License-Identifier: MIT
###############################################################################
# Build base.

if [ -z "$BASH_VERSION" ]
then
  echo "This script must be run under bash"
  exit 1
fi

if [ "$0" = "$BASH_SOURCE" ]
then
  set -o errexit
else
  echo "Warning: This script should not be sourced. Skipping exit on error."
fi


SCRIPT_DIR="$( cd "$(dirname "${BASH_SOURCE[0]:-$0}")" >/dev/null 2>&1 ; pwd -P )"

# Read command line options
. "${SCRIPT_DIR}/_buildopts.sh" \
    --name build \
    --desc "Build base." \
    -- "$@"

###############################################################################
# Globals
if [ -z "${VPL_DISP_BUILD_DIR}" ]
then
  VPL_DISP_BUILD_DIR="${PROJ_DIR}/_build"
fi
###############################################################################

if [ -n "${BOOTSTRAP_OPT}" ]
then
  echo "Building dependencies..."
  . "${SCRIPT_DIR}/bootstrap" ${FORWARD_OPTS}
fi

if [ -n "${VPL_INSTALL_DIR}" ]
then
  mkdir -p "${VPL_INSTALL_DIR}"
  INSTALL_PREFIX_CM_OPT="-DCMAKE_INSTALL_PREFIX=${VPL_INSTALL_DIR}"
fi

COFIG_CM_OPT="-DCMAKE_BUILD_TYPE=${COFIG_OPT}"

BUILD_DIR="${VPL_DISP_BUILD_DIR}"
if [ "${WARNING_AS_ERROR_OPT}" == "yes" ]; then
  CMAKE_WARN_OPTS=-DENABLE_WARNING_AS_ERROR=ON
fi
mkdir -p "${BUILD_DIR}"
pushd "${BUILD_DIR}"
cmake "${INSTALL_PREFIX_CM_OPT}" ${CMAKE_WARN_OPTS} "${COFIG_CM_OPT}" \
      -DBUILD_TESTS=ON -DBUILD_EXAMPLES=ON \
      -DENABLE_VA=ON -DENABLE_DRM=ON -DENABLE_WAYLAND=ON -DENABLE_X11=ON \
      -DENABLE_DRI3=ON "${PROJ_DIR}"
  make -j "$(nproc)" VERBOSE=1
  cmake --build . --config "${COFIG_OPT}" --target package
popd

# Signal to CI system
if [ -n "${TEAMCITY_VERSION}" ]; then
  echo "##teamcity[publishArtifacts '${BUILD_DIR}/*-all.zip=>']"
fi
